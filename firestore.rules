rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // helper functions
    function isEmailVerified(request) {
      return request.auth.token.email_verified;
    }

    function adminExists(adminID) {
      return exists(/databases/$(database)/documents/admins/$(adminID));
    }

    function userExists(userID) {
      return exists(/databases/$(database)/documents/users/$(userID));
    }

    function getAdminBusinessID(adminID) {
      return get(/databases/$(database)/documents/admins/$(adminID)).data.businessID;
    }

    function getUserBusinessID(userID) {
      return get(/databases/$(database)/documents/users/$(userID)).data.businessID;
    }


    // match admin documents
    match /admins/{adminID} {
      // let admins read their own documents
      allow read: if request.auth.uid == adminID;

      // don't let anyone update their admin document except through the backend
      allow write: if false
    }

    // match user documents
    match /users/{userID} {
      // let users read their own documents
      // and admins read the documents of their users
      allow read: if isEmailVerified(request) && request.auth.token.email == userID ||
        adminExists(request.auth.uid) && getAdminBusinessID(request.auth.uid) == resource.data.businessID;

      allow write: if false;
    }


    // match business documents and their subcollections
    match /businesses/{businessID}/{document=**} {
      // let verified admins and users read the business doc they belong to
      allow read: if adminExists(request.auth.uid) && (getAdminBusinessID(request.auth.uid) == businessID) || 
        isEmailVerified(request) && userExists(request.auth.token.email) && getUserBusinessID(request.auth.token.email) == businessID;

      // don't let anyone write to business documents
      allow write: if false;
    }

    // don't let anyone read or write mail documents
    match /mail/{mailID} {
      allow read, write: if false;
    }
  }
}