{"ast":null,"code":"var _jsxFileName = \"/Users/jerryye/perkify/src/components/AddRemoveTable.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { Card, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { DataGrid, GridToolbarContainer, useGridSlotComponentProps } from \"@material-ui/data-grid\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { createStyles, makeStyles } from \"@material-ui/styles\";\nimport clsx from \"clsx\";\nimport \"firebase/firestore\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"email\",\n  headerName: \"Email\",\n  width: 300,\n  editable: false\n}, {\n  field: \"group\",\n  headerName: \"Group\",\n  width: 200,\n  editable: false\n}];\nconst useToolbarStyles = makeStyles(theme => createStyles({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    height: \"60px\"\n  },\n  highlight: theme.palette.type === \"light\" ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: \"1 1 auto\",\n    marginLeft: \"10px\"\n  }\n}));\nconst useDataGridStyles = makeStyles(theme => createStyles({\n  root: {\n    border: \"none\" // padding: \"10px 20px\",\n\n  }\n}));\nexport const AddRemoveTable = ({\n  rows,\n  columns,\n  setSelected,\n  onClickAdd,\n  onClickDelete,\n  tableName,\n  addButtonText,\n  height\n}) => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const dataGridClasses = useDataGridStyles();\n\n  const CustomToolbar = () => {\n    _s();\n\n    const classes = useToolbarStyles();\n    const {\n      state\n    } = useGridSlotComponentProps();\n    const numSelected = Object.keys(state.selection).length;\n    return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n      className: clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      }),\n      children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        color: \"inherit\",\n        variant: \"subtitle1\",\n        component: \"div\",\n        children: [numSelected, \" selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        variant: \"h6\",\n        id: \"tableTitle\",\n        component: \"div\",\n        children: tableName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Delete\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"delete\",\n          onClick: onClickDelete,\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: onClickAdd,\n        style: {\n          marginRight: \"10px\"\n        },\n        children: addButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(CustomToolbar, \"oY5JadBBM1AzGWNG7OI/dOWcAQg=\", false, function () {\n    return [useToolbarStyles, useGridSlotComponentProps];\n  });\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      height,\n      border: 0\n    },\n    elevation: 4,\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      classes: {\n        root: dataGridClasses.root\n      },\n      rows: rows,\n      columns: columns,\n      pageSize: 10,\n      rowHeight: 60,\n      headerHeight: 60,\n      checkboxSelection: true,\n      onSelectionModelChange: newSelection => {\n        setSelected(newSelection.selectionModel);\n      },\n      components: {\n        Toolbar: CustomToolbar\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AddRemoveTable, \"Inxj6ZuJBIaf9oG0m8TnInxSUrg=\", false, function () {\n  return [useDataGridStyles];\n});\n\n_c = AddRemoveTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRemoveTable\");","map":{"version":3,"sources":["/Users/jerryye/perkify/src/components/AddRemoveTable.tsx"],"names":["Card","Typography","Button","IconButton","lighten","Tooltip","DataGrid","GridToolbarContainer","useGridSlotComponentProps","DeleteIcon","createStyles","makeStyles","clsx","React","columns","field","headerName","width","editable","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","height","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","marginLeft","useDataGridStyles","border","AddRemoveTable","rows","setSelected","onClickAdd","onClickDelete","tableName","addButtonText","dataGridClasses","CustomToolbar","classes","state","numSelected","Object","keys","selection","length","marginRight","newSelection","selectionModel","Toolbar"],"mappings":";;;AAAA,SAASA,IAAT,EAAsBC,UAAtB,QAAwC,mBAAxC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SACEC,QADF,EAEEC,oBAFF,EAGEC,yBAHF,QAIO,wBAJP;AAKA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,qBAAzC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,UAAU,EAAE,OAFd;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CADc,EAOd;AACEH,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,UAAU,EAAE,OAFd;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CAPc,CAAhB;AAeA,MAAMC,gBAAgB,GAAGR,UAAU,CAAES,KAAD,IAClCV,YAAY,CAAC;AACXW,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADT;AAEJC,IAAAA,YAAY,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFV;AAGJE,IAAAA,MAAM,EAAE;AAHJ,GADK;AAMXC,EAAAA,SAAS,EACPN,KAAK,CAACO,OAAN,CAAcC,IAAd,KAAuB,OAAvB,GACI;AACEC,IAAAA,KAAK,EAAET,KAAK,CAACO,OAAN,CAAcG,SAAd,CAAwBC,IADjC;AAEEC,IAAAA,eAAe,EAAE5B,OAAO,CAACgB,KAAK,CAACO,OAAN,CAAcG,SAAd,CAAwBG,KAAzB,EAAgC,IAAhC;AAF1B,GADJ,GAKI;AACEJ,IAAAA,KAAK,EAAET,KAAK,CAACO,OAAN,CAAcO,IAAd,CAAmBC,OAD5B;AAEEH,IAAAA,eAAe,EAAEZ,KAAK,CAACO,OAAN,CAAcG,SAAd,CAAwBM;AAF3C,GAZK;AAgBXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,UADD;AAELC,IAAAA,UAAU,EAAE;AAFP;AAhBI,CAAD,CADqB,CAAnC;AAwBA,MAAMC,iBAAiB,GAAG7B,UAAU,CAAES,KAAD,IACnCV,YAAY,CAAC;AACXW,EAAAA,IAAI,EAAE;AACJoB,IAAAA,MAAM,EAAE,MADJ,CAEJ;;AAFI;AADK,CAAD,CADsB,CAApC;AASA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAC7BC,EAAAA,IAD6B;AAE7B7B,EAAAA,OAF6B;AAG7B8B,EAAAA,WAH6B;AAI7BC,EAAAA,UAJ6B;AAK7BC,EAAAA,aAL6B;AAM7BC,EAAAA,SAN6B;AAO7BC,EAAAA,aAP6B;AAQ7BvB,EAAAA;AAR6B,CAAD,KASxB;AAAA;;AAAA;;AACJ,QAAMwB,eAAe,GAAGT,iBAAiB,EAAzC;;AAEA,QAAMU,aAAa,GAAG,MAAM;AAAA;;AAC1B,UAAMC,OAAO,GAAGhC,gBAAgB,EAAhC;AACA,UAAM;AAAEiC,MAAAA;AAAF,QAAY5C,yBAAyB,EAA3C;AACA,UAAM6C,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,SAAlB,EAA6BC,MAAjD;AAEA,wBACE,QAAC,oBAAD;AACE,MAAA,SAAS,EAAE7C,IAAI,CAACuC,OAAO,CAAC9B,IAAT,EAAe;AAC5B,SAAC8B,OAAO,CAACzB,SAAT,GAAqB2B,WAAW,GAAG;AADP,OAAf,CADjB;AAAA,iBAKGA,WAAW,GAAG,CAAd,gBACC,QAAC,UAAD;AACE,QAAA,SAAS,EAAEF,OAAO,CAACd,KADrB;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,SAAS,EAAC,KAJZ;AAAA,mBAMGgB,WANH;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAUC,QAAC,UAAD;AACE,QAAA,SAAS,EAAEF,OAAO,CAACd,KADrB;AAEE,QAAA,OAAO,EAAC,IAFV;AAGE,QAAA,EAAE,EAAC,YAHL;AAIE,QAAA,SAAS,EAAC,KAJZ;AAAA,kBAMGU;AANH;AAAA;AAAA;AAAA;AAAA,cAfJ,EAyBGM,WAAW,GAAG,CAAd,gBACC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,QAAf;AAAA,+BACE,QAAC,UAAD;AAAY,wBAAW,QAAvB;AAAgC,UAAA,OAAO,EAAEP,aAAzC;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,gBAOC,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAED,UAFX;AAGE,QAAA,KAAK,EAAE;AAAEa,UAAAA,WAAW,EAAE;AAAf,SAHT;AAAA,kBAKGV;AALH;AAAA;AAAA;AAAA;AAAA,cAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2CD,GAhDD;;AAHI,KAGEE,aAHF;AAAA,YAIc/B,gBAJd,EAKgBX,yBALhB;AAAA;;AAqDJ,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEiB,MAAAA,MAAF;AAAUgB,MAAAA,MAAM,EAAE;AAAlB,KAAb;AAAoC,IAAA,SAAS,EAAE,CAA/C;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,OAAO,EAAE;AAAEpB,QAAAA,IAAI,EAAE4B,eAAe,CAAC5B;AAAxB,OADX;AAEE,MAAA,IAAI,EAAEsB,IAFR;AAGE,MAAA,OAAO,EAAE7B,OAHX;AAIE,MAAA,QAAQ,EAAE,EAJZ;AAKE,MAAA,SAAS,EAAE,EALb;AAME,MAAA,YAAY,EAAE,EANhB;AAOE,MAAA,iBAAiB,MAPnB;AAQE,MAAA,sBAAsB,EAAG6C,YAAD,IAAkB;AACxCf,QAAAA,WAAW,CAACe,YAAY,CAACC,cAAd,CAAX;AACD,OAVH;AAWE,MAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAEX;AADC;AAXd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjFM;;IAAMR,c;UAUaF,iB;;;KAVbE,c","sourcesContent":["import { Card, Theme, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  useGridSlotComponentProps,\n} from \"@material-ui/data-grid\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { createStyles, makeStyles } from \"@material-ui/styles\";\nimport clsx from \"clsx\";\nimport \"firebase/firestore\";\nimport React from \"react\";\n\nconst columns = [\n  {\n    field: \"email\",\n    headerName: \"Email\",\n    width: 300,\n    editable: false,\n  },\n  {\n    field: \"group\",\n    headerName: \"Group\",\n    width: 200,\n    editable: false,\n  },\n];\n\nconst useToolbarStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1),\n      height: \"60px\",\n    },\n    highlight:\n      theme.palette.type === \"light\"\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n          }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n          },\n    title: {\n      flex: \"1 1 auto\",\n      marginLeft: \"10px\",\n    },\n  })\n);\n\nconst useDataGridStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      border: \"none\",\n      // padding: \"10px 20px\",\n    },\n  })\n);\n\nexport const AddRemoveTable = ({\n  rows,\n  columns,\n  setSelected,\n  onClickAdd,\n  onClickDelete,\n  tableName,\n  addButtonText,\n  height,\n}) => {\n  const dataGridClasses = useDataGridStyles();\n\n  const CustomToolbar = () => {\n    const classes = useToolbarStyles();\n    const { state } = useGridSlotComponentProps();\n    const numSelected = Object.keys(state.selection).length;\n\n    return (\n      <GridToolbarContainer\n        className={clsx(classes.root, {\n          [classes.highlight]: numSelected > 0,\n        })}\n      >\n        {numSelected > 0 ? (\n          <Typography\n            className={classes.title}\n            color=\"inherit\"\n            variant=\"subtitle1\"\n            component=\"div\"\n          >\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography\n            className={classes.title}\n            variant=\"h6\"\n            id=\"tableTitle\"\n            component=\"div\"\n          >\n            {tableName}\n          </Typography>\n        )}\n\n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"delete\" onClick={onClickDelete}>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Button\n            color=\"primary\"\n            onClick={onClickAdd}\n            style={{ marginRight: \"10px\" }}\n          >\n            {addButtonText}\n          </Button>\n        )}\n      </GridToolbarContainer>\n    );\n  };\n\n  return (\n    <Card style={{ height, border: 0 }} elevation={4}>\n      <DataGrid\n        classes={{ root: dataGridClasses.root }}\n        rows={rows}\n        columns={columns}\n        pageSize={10}\n        rowHeight={60}\n        headerHeight={60}\n        checkboxSelection\n        onSelectionModelChange={(newSelection) => {\n          setSelected(newSelection.selectionModel);\n        }}\n        components={{\n          Toolbar: CustomToolbar,\n        }}\n      />\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}