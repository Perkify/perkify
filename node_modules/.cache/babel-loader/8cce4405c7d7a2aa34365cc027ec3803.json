{"ast":null,"code":"var _jsxFileName = \"/Users/jerryye/perkify/src/contexts/Admin.tsx\",\n    _s = $RefreshSig$();\n\nimport { AuthContext } from \"contexts/Auth\";\nimport { db } from \"firebaseApp\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AdminContext = /*#__PURE__*/React.createContext({});\nexport const AdminProvider = ({\n  children\n}) => {\n  _s();\n\n  const [admin, setAdmin] = useState({});\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (currentUser) {\n      db.collection(\"admins\").doc(currentUser.uid).get().then(doc => {\n        const adminData = doc.data();\n        setAdmin(adminData);\n      }).catch(error => {\n        console.log(\"Error getting admin doc:\", error);\n      });\n    }\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(AdminContext.Provider, {\n    value: {\n      admin,\n      setAdmin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminProvider, \"Tyq3clGYKWdAUKRo5SvTq1SXVSM=\");\n\n_c = AdminProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminProvider\");","map":{"version":3,"sources":["/Users/jerryye/perkify/src/contexts/Admin.tsx"],"names":["AuthContext","db","React","useContext","useEffect","useState","AdminContext","createContext","AdminProvider","children","admin","setAdmin","currentUser","collection","doc","uid","get","then","adminData","data","catch","error","console","log"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;;AAEA,OAAO,MAAMC,YAAY,gBAAGJ,KAAK,CAACK,aAAN,CAAyB,EAAzB,CAArB;AAEP,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAkBT,UAAU,CAACH,WAAD,CAAlC;AAEAI,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,WAAJ,EAAiB;AACfX,MAAAA,EAAE,CAACY,UAAH,CAAc,QAAd,EACGC,GADH,CACOF,WAAW,CAACG,GADnB,EAEGC,GAFH,GAGGC,IAHH,CAGSH,GAAD,IAAS;AACb,cAAMI,SAAS,GAAGJ,GAAG,CAACK,IAAJ,EAAlB;AACAR,QAAAA,QAAQ,CAACO,SAAD,CAAR;AACD,OANH,EAOGE,KAPH,CAOUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,KAAxC;AACD,OATH;AAUD;AACF,GAbQ,EAaN,CAACT,WAAD,CAbM,CAAT;AAeA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,KADK;AAELC,MAAAA;AAFK,KADT;AAAA,cAMGF;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7BM;;GAAMD,a;;KAAAA,a","sourcesContent":["import { AuthContext } from \"contexts/Auth\";\nimport { db } from \"firebaseApp\";\nimport React, { useContext, useEffect, useState } from \"react\";\n\nexport const AdminContext = React.createContext<any>({});\n\nexport const AdminProvider = ({ children }) => {\n  const [admin, setAdmin] = useState({});\n  const { currentUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    if (currentUser) {\n      db.collection(\"admins\")\n        .doc(currentUser.uid)\n        .get()\n        .then((doc) => {\n          const adminData = doc.data();\n          setAdmin(adminData);\n        })\n        .catch((error) => {\n          console.log(\"Error getting admin doc:\", error);\n        });\n    }\n  }, [currentUser]);\n\n  return (\n    <AdminContext.Provider\n      value={{\n        admin,\n        setAdmin,\n      }}\n    >\n      {children}\n    </AdminContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}