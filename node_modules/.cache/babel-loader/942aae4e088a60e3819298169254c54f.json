{"ast":null,"code":"var _jsxFileName = \"/Users/jerryye/perkify/src/views/dashboard/piechart.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { PieChart, Pie, Sector, ResponsiveContainer, Cell, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst renderActiveShape = props => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: [/*#__PURE__*/_jsxDEV(\"text\", {\n      x: cx,\n      y: cy,\n      dy: 8,\n      textAnchor: \"middle\",\n      fill: fill,\n      children: payload.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sector, {\n      cx: cx,\n      cy: cy,\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle,\n      fill: fill\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sector, {\n      cx: cx,\n      cy: cy,\n      startAngle: startAngle,\n      endAngle: endAngle,\n      innerRadius: outerRadius + 6,\n      outerRadius: outerRadius + 10,\n      fill: fill\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: ex + (cos >= 0 ? 1 : -1) * 12,\n      y: ey,\n      dy: 18,\n      textAnchor: textAnchor,\n      fill: \"#999\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nconst PChart = props => {\n  _s();\n\n  var [activeIndex, setIndex] = React.useState(0);\n  const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\n  const onPieEnter = value => {\n    const isIndex = element => element.name === value.name;\n\n    setIndex(props.data.findIndex(isIndex));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"80%\",\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 400,\n      height: 300,\n      margin: {\n        top: 0,\n        right: 5,\n        bottom: 80,\n        left: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Pie, {\n        activeIndex: activeIndex,\n        activeShape: renderActiveShape,\n        data: props.data,\n        cx: \"50%\",\n        cy: \"50%\",\n        innerRadius: 60,\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        dataKey: \"value\",\n        onMouseEnter: onPieEnter,\n        children: props.data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        formatter: label => label + \" %\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n};\n\n_s(PChart, \"jtU/7i0dd/K6yGoR8fSDv0JH1cA=\");\n\n_c = PChart;\nexport default PChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PChart\");","map":{"version":3,"sources":["/Users/jerryye/perkify/src/views/dashboard/piechart.tsx"],"names":["React","PieChart","Pie","Sector","ResponsiveContainer","Cell","Tooltip","Legend","renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","name","PChart","activeIndex","setIndex","useState","COLORS","onPieEnter","isIndex","element","data","findIndex","top","right","bottom","left","map","entry","index","length","label"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector, ResponsiveContainer, Cell, Tooltip, Legend } from 'recharts';\n\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n      </text>\n    </g>\n  );\n};\n\n\n\nconst PChart = (props) => {\n\n    var [activeIndex, setIndex] = React.useState(0); \n    const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\n    \n\n    \n\n    const onPieEnter = (value) => {\n        const isIndex = (element) => element.name === value.name;\n        setIndex(props.data.findIndex(isIndex))\n    };\n\n\n    return (\n      <ResponsiveContainer width=\"100%\" height=\"80%\">\n        <PieChart width={400} height={300} margin={{ top: 0, right: 5, bottom: 80, left: 5 }}>\n          <Pie\n            activeIndex={activeIndex}\n            activeShape={renderActiveShape}\n            data={props.data}\n            cx=\"50%\"\n            cy=\"50%\"\n            innerRadius={60}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={onPieEnter}\n\n          >\n          {props.data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n        </Pie>\n        <Tooltip formatter={(label) => label + \" %\"}/>\n        <Legend />\n        </PieChart>\n      </ResponsiveContainer>\n    );\n}\n\nexport default PChart"]},"metadata":{},"sourceType":"module"}