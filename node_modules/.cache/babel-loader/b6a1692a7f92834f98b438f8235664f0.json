{"ast":null,"code":"var _jsxFileName = \"/Users/jerryye/perkify/src/views/signUpBusinessWebflow/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { createStyles, makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AdminSignUpForm from \"components/AdminSignUpForm\";\nimport BusinessSignUpForm from \"components/BusinessSignUpForm\";\nimport VerifyEmail from \"components/VerifyEmail\";\nimport app from \"firebaseApp\";\nimport logo from \"images/logo.png\";\nimport SignUpGraphic from \"images/SignUpGraphic.png\";\nimport React from \"react\";\nimport { PerkifyApi } from \"services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst crypto = require(\"crypto\");\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}))(TextField);\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    height: \"100vh\",\n    fontFamily: \"Plusjakartadisplay\",\n    backgroundColor: \"white\"\n  },\n  image: {\n    backgroundImage: `url(${SignUpGraphic})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor: \"#5289f2\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\"\n  },\n  content: {\n    width: \"100%\",\n    padding: \"3% 5%\"\n  },\n  logo: {\n    display: \"block\",\n    width: \"135px\",\n    maxHeight: \"40px\"\n  },\n  header: {\n    marginTop: \"0px\",\n    marginBottom: \"0px\",\n    fontFamily: \"Plusjakartadisplay\",\n    color: \"#152c5b\",\n    fontSize: \"40px\",\n    lineHeight: \"54px\" //       fontWeight: \"500\",\n\n  },\n  label: {\n    fontFamily: \"Plusjakartadisplay\",\n    fontSize: \"14px\",\n    color: \"#152c5b\"\n  }\n}));\nconst steps = [\"Admin info\", \"Business details\", \"Verify Email\"];\n\nconst SignUpBusinessWebflow = () => {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [invalidStep, setInvalidStep] = React.useState(false);\n  const [firstName, setFirstName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const AdminFormSetProps = {\n    setFirstName,\n    setLastName,\n    setEmail,\n    setPassword\n  };\n  const AdminFormProps = {\n    firstName,\n    lastName,\n    email,\n    password\n  };\n  const [businessName, setBusinessName] = React.useState(\"\");\n  const [address1, setAddress] = React.useState(\"\");\n  const [city, setCity] = React.useState(\"\");\n  const [state, setState] = React.useState(\"\");\n  const [zip, setZip] = React.useState(\"\");\n  const [phone, setPhone] = React.useState(\"\");\n  const BusinessFormSetProps = {\n    setBusinessName,\n    setAddress,\n    setCity,\n    setState,\n    setZip,\n    setPhone\n  };\n  const BusinessFormProps = {\n    businessName,\n    address1,\n    city,\n    state,\n    zip,\n    phone\n  };\n  const [newUser, setNewUser] = React.useState(null);\n\n  const processStep = async step => {\n    switch (step) {\n      case 0:\n        return true;\n\n      case 1:\n        try {\n          var _result$user;\n\n          await PerkifyApi.post(\"user/registerAdminAndBusiness\", JSON.stringify({ ...AdminFormProps,\n            ...BusinessFormProps\n          }));\n          const result = await app.auth().signInWithEmailAndPassword(email, password);\n          setNewUser(result.user);\n          await (result === null || result === void 0 ? void 0 : (_result$user = result.user) === null || _result$user === void 0 ? void 0 : _result$user.sendEmailVerification({\n            url: \"https://app.getperkify.com/login\"\n          }));\n          return true;\n        } catch (error) {\n          alert(error);\n          return false;\n        }\n\n        return true;\n\n      case 2:\n        return true;\n    }\n  };\n\n  const handleNext = async validnext => {\n    if (validnext && (await processStep(activeStep))) {\n      setInvalidStep(false);\n      setActiveStep(activeStep + 1);\n    } else {\n      setInvalidStep(true);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const getStepContent = step => {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(AdminSignUpForm, { ...AdminFormSetProps,\n          ...AdminFormProps,\n          invalidStep: invalidStep,\n          nextStep: handleNext,\n          nextReady: !Object.values(AdminFormProps).some(fieldprop => fieldprop === \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(BusinessSignUpForm, { ...BusinessFormSetProps,\n          ...BusinessFormProps,\n          invalidStep: invalidStep,\n          backStep: handleBack,\n          nextStep: handleNext,\n          nextReady: !Object.values(BusinessFormProps).some(fieldprop => fieldprop === \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(VerifyEmail, {\n          email: email,\n          newUser: newUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 16\n        }, this);\n\n      default:\n        throw new Error(\"Unknown step\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    component: \"main\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      xs: 12,\n      sm: 12,\n      md: 6,\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        className: classes.logo,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        style: {\n          height: \"80vh\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: {\n            marginTop: \"90px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: classes.header,\n            children: \"Get your business set up with Perkify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n          activeStep: activeStep,\n          style: {\n            paddingLeft: \"0\",\n            width: \"90%\"\n          },\n          children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n            children: /*#__PURE__*/_jsxDEV(StepLabel, {\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), getStepContent(activeStep)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: false,\n      sm: false,\n      md: 6,\n      className: classes.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpBusinessWebflow, \"3Mc3AGt0dj5A1OGVuuHvCY7+ZwY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SignUpBusinessWebflow;\nexport default SignUpBusinessWebflow;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpBusinessWebflow\");","map":{"version":3,"sources":["/Users/jerryye/perkify/src/views/signUpBusinessWebflow/index.tsx"],"names":["Grid","Step","StepLabel","Stepper","createStyles","makeStyles","withStyles","TextField","AdminSignUpForm","BusinessSignUpForm","VerifyEmail","app","logo","SignUpGraphic","React","PerkifyApi","crypto","require","BootstrapInput","theme","root","marginTop","spacing","useStyles","height","fontFamily","backgroundColor","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","content","width","padding","display","maxHeight","header","marginBottom","color","fontSize","lineHeight","label","steps","SignUpBusinessWebflow","classes","activeStep","setActiveStep","useState","invalidStep","setInvalidStep","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","AdminFormSetProps","AdminFormProps","businessName","setBusinessName","address1","setAddress","city","setCity","state","setState","zip","setZip","phone","setPhone","BusinessFormSetProps","BusinessFormProps","newUser","setNewUser","processStep","step","post","JSON","stringify","result","auth","signInWithEmailAndPassword","user","sendEmailVerification","url","error","alert","handleNext","validnext","handleBack","getStepContent","Object","values","some","fieldprop","Error","paddingLeft","map"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { createStyles, makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AdminSignUpForm from \"components/AdminSignUpForm\";\nimport BusinessSignUpForm from \"components/BusinessSignUpForm\";\nimport VerifyEmail from \"components/VerifyEmail\";\nimport firebase from \"firebase/app\";\nimport app from \"firebaseApp\";\nimport logo from \"images/logo.png\";\nimport SignUpGraphic from \"images/SignUpGraphic.png\";\nimport React from \"react\";\nimport { PerkifyApi } from \"services\";\n\nconst crypto = require(\"crypto\");\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}))(TextField);\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      height: \"100vh\",\n      fontFamily: \"Plusjakartadisplay\",\n      backgroundColor: \"white\",\n    },\n    image: {\n      backgroundImage: `url(${SignUpGraphic})`,\n      backgroundRepeat: \"no-repeat\",\n      backgroundColor: \"#5289f2\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n    },\n    content: {\n      width: \"100%\",\n      padding: \"3% 5%\",\n    },\n    logo: {\n      display: \"block\",\n      width: \"135px\",\n      maxHeight: \"40px\",\n    },\n    header: {\n      marginTop: \"0px\",\n      marginBottom: \"0px\",\n      fontFamily: \"Plusjakartadisplay\",\n      color: \"#152c5b\",\n      fontSize: \"40px\",\n      lineHeight: \"54px\",\n      //       fontWeight: \"500\",\n    },\n    label: {\n      fontFamily: \"Plusjakartadisplay\",\n      fontSize: \"14px\",\n      color: \"#152c5b\",\n    },\n  })\n);\n\nconst steps = [\"Admin info\", \"Business details\", \"Verify Email\"];\n\nconst SignUpBusinessWebflow = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [invalidStep, setInvalidStep] = React.useState(false);\n\n  const [firstName, setFirstName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const AdminFormSetProps = {\n    setFirstName,\n    setLastName,\n    setEmail,\n    setPassword,\n  };\n  const AdminFormProps = { firstName, lastName, email, password };\n\n  const [businessName, setBusinessName] = React.useState(\"\");\n  const [address1, setAddress] = React.useState(\"\");\n  const [city, setCity] = React.useState(\"\");\n  const [state, setState] = React.useState(\"\");\n  const [zip, setZip] = React.useState(\"\");\n  const [phone, setPhone] = React.useState(\"\");\n  const BusinessFormSetProps = {\n    setBusinessName,\n    setAddress,\n    setCity,\n    setState,\n    setZip,\n    setPhone,\n  };\n  const BusinessFormProps = { businessName, address1, city, state, zip, phone };\n\n  const [newUser, setNewUser] = React.useState<firebase.User>(\n    null as firebase.User | null\n  );\n\n  const processStep = async (step) => {\n    switch (step) {\n      case 0:\n        return true;\n      case 1:\n        try {\n          await PerkifyApi.post(\n            \"user/registerAdminAndBusiness\",\n            JSON.stringify({\n              ...AdminFormProps,\n              ...BusinessFormProps,\n            })\n          );\n          const result = await app\n            .auth()\n            .signInWithEmailAndPassword(email, password);\n          setNewUser(result.user);\n          await result?.user?.sendEmailVerification({\n            url: \"https://app.getperkify.com/login\",\n          });\n          return true;\n        } catch (error) {\n          alert(error);\n          return false;\n        }\n        return true;\n      case 2:\n        return true;\n    }\n  };\n\n  const handleNext = async (validnext) => {\n    if (validnext && (await processStep(activeStep))) {\n      setInvalidStep(false);\n      setActiveStep(activeStep + 1);\n    } else {\n      setInvalidStep(true);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const getStepContent = (step) => {\n    switch (step) {\n      case 0:\n        return (\n          <AdminSignUpForm\n            {...AdminFormSetProps}\n            {...AdminFormProps}\n            invalidStep={invalidStep}\n            nextStep={handleNext}\n            nextReady={\n              !Object.values(AdminFormProps).some(\n                (fieldprop) => fieldprop === \"\"\n              )\n            }\n          />\n        );\n      case 1:\n        return (\n          <BusinessSignUpForm\n            {...BusinessFormSetProps}\n            {...BusinessFormProps}\n            invalidStep={invalidStep}\n            backStep={handleBack}\n            nextStep={handleNext}\n            nextReady={\n              !Object.values(BusinessFormProps).some(\n                (fieldprop) => fieldprop === \"\"\n              )\n            }\n          />\n        );\n      case 2:\n        return <VerifyEmail email={email} newUser={newUser} />;\n      default:\n        throw new Error(\"Unknown step\");\n    }\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <Grid\n        container\n        direction=\"column\"\n        xs={12}\n        sm={12}\n        md={6}\n        className={classes.content}\n      >\n        <a href=\"/\" className={classes.logo}>\n          <img src={logo} style={{ width: \"100%\" }} />\n        </a>\n        <Grid\n          container\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          style={{ height: \"80vh\" }}\n        >\n          <Grid item style={{ marginTop: \"90px\" }}>\n            <h2 className={classes.header}>\n              Get your business set up with Perkify\n            </h2>\n          </Grid>\n          <Stepper\n            activeStep={activeStep}\n            style={{ paddingLeft: \"0\", width: \"90%\" }}\n          >\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          {getStepContent(activeStep)}\n        </Grid>\n      </Grid>\n      <Grid item xs={false} sm={false} md={6} className={classes.image}></Grid>\n    </Grid>\n  );\n};\n\nexport default SignUpBusinessWebflow;\n"]},"metadata":{},"sourceType":"module"}