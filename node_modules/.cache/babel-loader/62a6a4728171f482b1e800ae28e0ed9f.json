{"ast":null,"code":"export const validateEmail = email => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\nexport const validateEmails = emailString => {\n  let emails = emailString.replace(/[,'\"]+/gi, \" \").split(/\\s+/);\n  let retValue = true;\n  emails.forEach(email => {\n    if (validateEmail(email) === false) {\n      retValue = false;\n    }\n  });\n  return retValue;\n};","map":{"version":3,"sources":["/Users/jerryye/perkify/src/utils/emailValidation.ts"],"names":["validateEmail","email","re","test","String","toLowerCase","validateEmails","emailString","emails","replace","split","retValue","forEach"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,KAAD,IAAW;AACtC,QAAMC,EAAE,GACN,uJADF;AAEA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACH,KAAD,CAAN,CAAcI,WAAd,EAAR,CAAP;AACD,CAJM;AAMP,OAAO,MAAMC,cAAc,GAAIC,WAAD,IAAiB;AAC7C,MAAIC,MAAM,GAAGD,WAAW,CAACE,OAAZ,CAAoB,UAApB,EAAgC,GAAhC,EAAqCC,KAArC,CAA2C,KAA3C,CAAb;AACA,MAAIC,QAAQ,GAAG,IAAf;AACAH,EAAAA,MAAM,CAACI,OAAP,CAAgBX,KAAD,IAAW;AACxB,QAAID,aAAa,CAACC,KAAD,CAAb,KAAyB,KAA7B,EAAoC;AAClCU,MAAAA,QAAQ,GAAG,KAAX;AACD;AACF,GAJD;AAKA,SAAOA,QAAP;AACD,CATM","sourcesContent":["export const validateEmail = (email) => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nexport const validateEmails = (emailString) => {\n  let emails = emailString.replace(/[,'\"]+/gi, \" \").split(/\\s+/);\n  let retValue = true;\n  emails.forEach((email) => {\n    if (validateEmail(email) === false) {\n      retValue = false;\n    }\n  });\n  return retValue;\n};\n"]},"metadata":{},"sourceType":"module"}