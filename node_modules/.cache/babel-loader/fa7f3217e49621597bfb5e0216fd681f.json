{"ast":null,"code":"var _jsxFileName = \"/Users/jerryye/perkify/src/views/manageGroups/AddPerks.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, MenuItem, Select, Typography } from \"@material-ui/core\";\nimport { AuthContext } from \"contexts/Auth\";\nimport React, { useContext, useState } from \"react\";\nimport { PerkifyApi } from \"services\";\nimport { allPerks } from \"../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPerks = ({\n  isAddPerksModalVisible,\n  setIsAddPerksModalVisible,\n  selectedPerks,\n  group,\n  emails\n}) => {\n  _s();\n\n  const [perksToAdd, setPerksToAdd] = useState([]);\n  const [selectedPerksError, setSelectedPerksError] = useState(\"\");\n  const [availablePerks, setAvailablePerks] = useState(allPerks.map(perkObj => perkObj.Name));\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  const addPerksToPerkGroup = event => {\n    event.preventDefault();\n    let error = false;\n\n    if (perksToAdd.length == 0) {\n      setSelectedPerksError(\"Select perks\");\n      error = true;\n    }\n\n    if (!error) {\n      setIsAddPerksModalVisible(false);\n\n      (async () => {\n        const bearerToken = await currentUser.getIdToken();\n        const afterPerks = perksToAdd.concat(selectedPerks.map(perkObj => perkObj.Name));\n        console.log(afterPerks);\n        await PerkifyApi.put(\"user/auth/updatePerkGroup\", JSON.stringify({\n          group,\n          emails: emails.map(emailObj => emailObj.email),\n          perks: afterPerks\n        }), {\n          headers: {\n            Authorization: `Bearer ${bearerToken}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n      })();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: isAddPerksModalVisible,\n    onClose: () => setIsAddPerksModalVisible(false),\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      children: \"Add Perks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"To add users to this organization, please enter their email addresses below and select a group from the dropdown.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          marginTop: \"30px\",\n          marginBottom: \"15px\"\n        },\n        children: \"Perks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        displayEmpty: true,\n        renderValue: selected => {\n          if (selected.length === 0) {\n            return \"Select Perks\";\n          }\n\n          return selected.join(\", \");\n        },\n        variant: \"outlined\",\n        value: perksToAdd,\n        multiple: true,\n        fullWidth: true,\n        label: \"Select Group\",\n        placeholder: \"Select Gruop\",\n        onChange: event => {\n          setPerksToAdd(event.target.value);\n        },\n        error: selectedPerksError != \"\",\n        children: availablePerks.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: name,\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsAddPerksModalVisible(false),\n        color: \"primary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addPerksToPerkGroup,\n        color: \"primary\",\n        children: \"Add Perks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPerks, \"GivhB1JthYtxwHZhIERwTJ9GjE4=\");\n\n_c = AddPerks;\nexport default AddPerks;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPerks\");","map":{"version":3,"sources":["/Users/jerryye/perkify/src/views/manageGroups/AddPerks.tsx"],"names":["Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","MenuItem","Select","Typography","AuthContext","React","useContext","useState","PerkifyApi","allPerks","AddPerks","isAddPerksModalVisible","setIsAddPerksModalVisible","selectedPerks","group","emails","perksToAdd","setPerksToAdd","selectedPerksError","setSelectedPerksError","availablePerks","setAvailablePerks","map","perkObj","Name","currentUser","addPerksToPerkGroup","event","preventDefault","error","length","bearerToken","getIdToken","afterPerks","concat","console","log","put","JSON","stringify","emailObj","email","perks","headers","Authorization","marginTop","marginBottom","selected","join","target","value","name"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  MenuItem,\n  Select,\n  Typography,\n} from \"@material-ui/core\";\nimport { AuthContext } from \"contexts/Auth\";\nimport React, { useContext, useState } from \"react\";\nimport { PerkifyApi } from \"services\";\nimport { allPerks } from \"../../constants\";\n\nconst AddPerks = ({\n  isAddPerksModalVisible,\n  setIsAddPerksModalVisible,\n  selectedPerks,\n  group,\n  emails,\n}) => {\n  const [perksToAdd, setPerksToAdd] = useState([]);\n  const [selectedPerksError, setSelectedPerksError] = useState(\"\");\n  const [availablePerks, setAvailablePerks] = useState(\n    allPerks.map((perkObj) => perkObj.Name)\n  );\n  const { currentUser } = useContext(AuthContext);\n\n  const addPerksToPerkGroup = (event) => {\n    event.preventDefault();\n    let error = false;\n    if (perksToAdd.length == 0) {\n      setSelectedPerksError(\"Select perks\");\n      error = true;\n    }\n\n    if (!error) {\n      setIsAddPerksModalVisible(false);\n\n      (async () => {\n        const bearerToken = await currentUser.getIdToken();\n\n        const afterPerks = perksToAdd.concat(\n          selectedPerks.map((perkObj) => perkObj.Name)\n        );\n        console.log(afterPerks);\n\n        await PerkifyApi.put(\n          \"user/auth/updatePerkGroup\",\n          JSON.stringify({\n            group,\n            emails: emails.map((emailObj) => emailObj.email),\n            perks: afterPerks,\n          }),\n          {\n            headers: {\n              Authorization: `Bearer ${bearerToken}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n      })();\n    }\n  };\n\n  return (\n    <Dialog\n      open={isAddPerksModalVisible}\n      onClose={() => setIsAddPerksModalVisible(false)}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <DialogTitle id=\"form-dialog-title\">Add Perks</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          To add users to this organization, please enter their email addresses\n          below and select a group from the dropdown.\n        </DialogContentText>\n        <Typography style={{ marginTop: \"30px\", marginBottom: \"15px\" }}>\n          Perks\n        </Typography>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          displayEmpty\n          renderValue={(selected) => {\n            if ((selected as string[]).length === 0) {\n              return \"Select Perks\";\n            }\n\n            return (selected as string[]).join(\", \");\n          }}\n          variant=\"outlined\"\n          value={perksToAdd}\n          multiple\n          fullWidth\n          label=\"Select Group\"\n          placeholder=\"Select Gruop\"\n          onChange={(event) => {\n            setPerksToAdd(event.target.value as string[]);\n          }}\n          error={selectedPerksError != \"\"}\n        >\n          {availablePerks.map((name) => (\n            <MenuItem value={name} key={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => setIsAddPerksModalVisible(false)}\n          color=\"primary\"\n        >\n          Cancel\n        </Button>\n        <Button onClick={addPerksToPerkGroup} color=\"primary\">\n          Add Perks\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddPerks;\n"]},"metadata":{},"sourceType":"module"}