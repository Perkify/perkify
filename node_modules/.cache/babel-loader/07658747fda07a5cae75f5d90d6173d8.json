{"ast":null,"code":"var _jsxFileName = \"/Users/jerryye/perkify/src/contexts/Auth.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport app from \"../firebaseApp\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext({});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loadingAuthState, setLoadingAuthState] = useState(true);\n  useEffect(() => {\n    app.auth().onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoadingAuthState(false);\n    });\n  }, []);\n\n  if (loadingAuthState) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading...\"\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      authenticated: currentUser !== null,\n      setCurrentUser,\n      loadingAuthState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"DzAjk6+VKGdiFn2DxQZXXDKM3Iw=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/jerryye/perkify/src/contexts/Auth.tsx"],"names":["React","useEffect","useState","app","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","loadingAuthState","setLoadingAuthState","auth","onAuthStateChanged","user","authenticated"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,gBAAhB;;;AASA,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,CAA2C,EAA3C,CAApB;AAEP,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,IAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CAACS,IAAJ,GAAWC,kBAAX,CAA+BC,IAAD,IAAU;AACtCL,MAAAA,cAAc,CAACK,IAAD,CAAd;AACAH,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,MAAID,gBAAJ,EAAsB;AACpB,wBAAO;AAAA;AAAA,qBAAP;AACD;;AAED,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,WADK;AAELO,MAAAA,aAAa,EAAEP,WAAW,KAAK,IAF1B;AAGLC,MAAAA,cAHK;AAILC,MAAAA;AAJK,KADT;AAAA,cAQGH;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA3BM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import firebase from \"firebase/app\";\nimport React, { useEffect, useState } from \"react\";\nimport app from \"../firebaseApp\";\n\ntype ContextProps = {\n  currentUser: firebase.User | null;\n  authenticated: boolean;\n  setCurrentUser: any;\n  loadingAuthState: boolean;\n};\n\nexport const AuthContext = React.createContext<Partial<ContextProps>>({});\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null as firebase.User | null);\n  const [loadingAuthState, setLoadingAuthState] = useState(true);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoadingAuthState(false);\n    });\n  }, []);\n\n  if (loadingAuthState) {\n    return <>Loading...</>;\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n        authenticated: currentUser !== null,\n        setCurrentUser,\n        loadingAuthState,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}