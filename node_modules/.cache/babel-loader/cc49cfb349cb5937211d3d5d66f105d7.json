{"ast":null,"code":"var _jsxFileName = \"/Users/jerryye/perkify/src/views/dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport VerticalNav from \"components/VerticalNav\";\nimport React from \"react\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport CreateGroup from \"views/createGroup\";\nimport ManagePeople from \"views/employees\";\nimport ManageGroups from \"views/manageGroups\";\nimport GeneralDashboard from \"./GeneralDashboard\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  }\n});\n\nconst Dashboard = () => {\n  _s();\n\n  const {\n    path,\n    url\n  } = useRouteMatch();\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(0);\n  const [progressHidden, setHidden] = React.useState(false);\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(oldProgress => {\n        if (oldProgress === 99) {\n          return 99;\n        }\n\n        const diff = Math.random() * 20;\n        return Math.min(oldProgress + diff, 99);\n      });\n    }, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  function deleteLoadingBar() {\n    setProgress(100);\n    setHidden(true);\n  }\n\n  function startLoadingBar() {\n    setProgress(0);\n    setHidden(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: progress,\n      hidden: progressHidden\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(VerticalNav, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: path,\n          render: props => /*#__PURE__*/_jsxDEV(GeneralDashboard, {\n            doneLoading: deleteLoadingBar,\n            startLoading: startLoadingBar()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `${path}/people`,\n          render: props => /*#__PURE__*/_jsxDEV(ManagePeople, {\n            doneLoadin: deleteLoadingBar,\n            startLoading: startLoadingBar()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `${path}/group/:id`,\n          render: props => /*#__PURE__*/_jsxDEV(ManageGroups, {\n            doneLoading: deleteLoadingBar,\n            startLoading: startLoadingBar()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `${path}/create/group`,\n          render: props => /*#__PURE__*/_jsxDEV(CreateGroup, {\n            doneLoading: deleteLoadingBar,\n            startLoading: startLoadingBar()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"Y/1XdRiq4hATkyZpvpsgGTUKEss=\", false, function () {\n  return [useRouteMatch, useStyles];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jerryye/perkify/src/views/dashboard/index.tsx"],"names":["VerticalNav","React","Route","Switch","useRouteMatch","CreateGroup","ManagePeople","ManageGroups","GeneralDashboard","makeStyles","LinearProgress","useStyles","root","width","Dashboard","path","url","classes","progress","setProgress","useState","progressHidden","setHidden","useEffect","timer","setInterval","oldProgress","diff","Math","random","min","clearInterval","deleteLoadingBar","startLoadingBar","props"],"mappings":"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","sourcesContent":["import VerticalNav from \"components/VerticalNav\";\nimport React from \"react\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport CreateGroup from \"views/createGroup\";\nimport ManagePeople from \"views/employees\";\nimport ManageGroups from \"views/manageGroups\";\nimport GeneralDashboard from \"./GeneralDashboard\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\n\nconst Dashboard = () => {\n  const { path, url } = useRouteMatch();\n\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(0);\n  const [progressHidden, setHidden] = React.useState(false);\n\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((oldProgress) => {\n        if (oldProgress === 99) {\n          return 99;\n        }\n        const diff = Math.random() * 20;\n        return Math.min(oldProgress + diff, 99);\n      });\n    }, 500);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  function deleteLoadingBar(){\n    setProgress(100)\n    setHidden(true)\n  }\n\n  function startLoadingBar(){\n    setProgress(0)\n    setHidden(false)\n  }\n\n  return (\n    <>\n    <LinearProgress variant=\"determinate\" value={progress} hidden={progressHidden}/>\n    <VerticalNav>\n      <Switch>\n        <Route exact path={path} render={(props) => (<GeneralDashboard doneLoading={deleteLoadingBar} startLoading={startLoadingBar()}/>)} />\n        <Route path={`${path}/people`} render={(props) => (<ManagePeople doneLoadin={deleteLoadingBar} startLoading={startLoadingBar()}/>)} />\n        <Route path={`${path}/group/:id`} render={(props) => (<ManageGroups doneLoading={deleteLoadingBar} startLoading={startLoadingBar()}/>)} />\n        <Route path={`${path}/create/group`} render={(props) => (<CreateGroup doneLoading={deleteLoadingBar} startLoading={startLoadingBar()}/>)} />\n      </Switch>\n      \n    </VerticalNav>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}