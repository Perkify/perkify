{"ast":null,"code":"var _jsxFileName = \"/Users/jerryye/perkify/src/views/getCard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}))(TextField);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    fontFamily: \"Plusjakartadisplay\",\n    minHeight: \"100vh\"\n  },\n  label: {\n    fontFamily: \"Plusjakartadisplay\",\n    fontSize: \"14px\",\n    color: \"#152c5b\"\n  },\n  footer: {\n    fontFamily: \"Plusjakartadisplay\",\n    color: \"#8a95ad\",\n    fontSize: \"14px\",\n    textAlign: \"center\"\n  }\n}));\n\nconst GetCard = () => {\n  _s();\n\n  const classes = useStyles();\n  const [firstName, setFirstName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [dob, setDob] = React.useState(\"\");\n  const [invalidStep, setInvalidStep] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const formFields = {\n    firstName,\n    lastName,\n    email,\n    dob\n  };\n\n  const submitGetCard = async () => {\n    try {\n      if (Object.values(formFields).some(fieldprop => fieldprop === \"\")) {\n        setInvalidStep(true);\n        return;\n      }\n\n      setInvalidStep(false);\n      let dobFormatted = new Date(new Date(dob)).toLocaleDateString();\n      console.log(dobFormatted);\n      const response = await fetch(\"https://us-central1-perkify-5790b.cloudfunctions.net/user/registerUser\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          firstName,\n          lastName,\n          dob: dobFormatted\n        })\n      });\n\n      if (response.status != 200) {\n        console.log(response);\n        throw {\n          status: response.status,\n          reason: response.statusText\n        };\n      }\n\n      setSuccess(true);\n    } catch (e) {\n      alert(JSON.stringify(e));\n      setSuccess(false);\n    }\n  };\n\n  const fillTextbox = setFunction => event => {\n    setFunction(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      direction: \"column\",\n      alignItems: \"center\",\n      justify: \"center\",\n      className: classes.root,\n      children: success ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"email\",\n            className: classes.label,\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BootstrapInput, {\n            placeholder: \"johnsmith@mybusiness.com\",\n            id: \"email\",\n            variant: \"outlined\",\n            onChange: fillTextbox(setEmail),\n            value: email,\n            error: email === \"\" && invalidStep,\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"firstName\",\n            className: classes.label,\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BootstrapInput, {\n            placeholder: \"John\",\n            id: \"firstName\",\n            variant: \"outlined\",\n            style: {\n              width: \"100%\"\n            },\n            onChange: fillTextbox(setFirstName),\n            value: firstName,\n            error: firstName === \"\" && invalidStep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"lastName\",\n            className: classes.label,\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BootstrapInput, {\n            placeholder: \"Smith\",\n            id: \"lastName\",\n            variant: \"outlined\",\n            style: {\n              width: \"100%\"\n            },\n            onChange: fillTextbox(setLastName),\n            value: lastName,\n            error: lastName === \"\" && invalidStep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"dob\",\n            className: classes.label,\n            children: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BootstrapInput, {\n            id: \"dob\",\n            type: \"date\",\n            style: {\n              width: \"100%\"\n            },\n            onChange: fillTextbox(setDob),\n            value: dob,\n            error: dob === \"\" && invalidStep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              width: \"100%\",\n              height: \"60px\",\n              textTransform: \"none\"\n            },\n            disableElevation: true,\n            onClick: submitGetCard,\n            children: \"Get an Email with your Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          className: classes.footer,\n          children: [\"Already logged in once before?\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.getperkify.com/view-my-card\",\n            className: \"sign-in\",\n            children: \"\\xA0Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetCard, \"PcJQNBPH+iRCZ0UEkiXQLele6/c=\", false, function () {\n  return [useStyles];\n});\n\n_c = GetCard;\nexport default GetCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetCard\");","map":{"version":3,"sources":["/Users/jerryye/perkify/src/views/getCard/index.tsx"],"names":["Button","Container","Grid","InputLabel","makeStyles","withStyles","TextField","React","BootstrapInput","theme","root","marginTop","spacing","useStyles","fontFamily","minHeight","label","fontSize","color","footer","textAlign","GetCard","classes","firstName","setFirstName","useState","lastName","setLastName","email","setEmail","dob","setDob","invalidStep","setInvalidStep","success","setSuccess","formFields","submitGetCard","Object","values","some","fieldprop","dobFormatted","Date","toLocaleDateString","console","log","response","fetch","method","body","JSON","stringify","status","reason","statusText","e","alert","fillTextbox","setFunction","event","target","value","width","height","textTransform"],"mappings":"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","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React from \"react\";\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    \"label + &\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}))(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Plusjakartadisplay\",\n    minHeight: \"100vh\",\n  },\n  label: {\n    fontFamily: \"Plusjakartadisplay\",\n    fontSize: \"14px\",\n    color: \"#152c5b\",\n  },\n  footer: {\n    fontFamily: \"Plusjakartadisplay\",\n    color: \"#8a95ad\",\n    fontSize: \"14px\",\n    textAlign: \"center\",\n  },\n}));\n\nconst GetCard = () => {\n  const classes = useStyles();\n  const [firstName, setFirstName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [dob, setDob] = React.useState(\"\");\n  const [invalidStep, setInvalidStep] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const formFields = { firstName, lastName, email, dob };\n\n  const submitGetCard = async () => {\n    try {\n      if (Object.values(formFields).some((fieldprop) => fieldprop === \"\")) {\n        setInvalidStep(true);\n        return;\n      }\n      setInvalidStep(false);\n\n      let dobFormatted = new Date(new Date(dob)).toLocaleDateString();\n      console.log(dobFormatted);\n      const response = await fetch(\n        \"https://us-central1-perkify-5790b.cloudfunctions.net/user/registerUser\",\n        {\n          method: \"POST\",\n          body: JSON.stringify({\n            email,\n            firstName,\n            lastName,\n            dob: dobFormatted,\n          }),\n        }\n      );\n      if (response.status != 200) {\n        console.log(response);\n        throw {\n          status: response.status,\n          reason: response.statusText,\n        };\n      }\n      setSuccess(true);\n    } catch (e) {\n      alert(JSON.stringify(e));\n      setSuccess(false);\n    }\n  };\n\n  const fillTextbox = (setFunction) => (event) => {\n    setFunction(event.target.value);\n  };\n\n  return (\n    <Container>\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        className={classes.root}\n      >\n        {success ? (\n          <h1>Success!</h1>\n        ) : (\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={12}>\n              <InputLabel htmlFor=\"email\" className={classes.label}>\n                Email\n              </InputLabel>\n              <BootstrapInput\n                placeholder=\"johnsmith@mybusiness.com\"\n                id=\"email\"\n                variant=\"outlined\"\n                onChange={fillTextbox(setEmail)}\n                value={email}\n                error={email === \"\" && invalidStep}\n                style={{ width: \"100%\" }}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <InputLabel htmlFor=\"firstName\" className={classes.label}>\n                First Name\n              </InputLabel>\n              <BootstrapInput\n                placeholder=\"John\"\n                id=\"firstName\"\n                variant=\"outlined\"\n                style={{ width: \"100%\" }}\n                onChange={fillTextbox(setFirstName)}\n                value={firstName}\n                error={firstName === \"\" && invalidStep}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <InputLabel htmlFor=\"lastName\" className={classes.label}>\n                Last Name\n              </InputLabel>\n              <BootstrapInput\n                placeholder=\"Smith\"\n                id=\"lastName\"\n                variant=\"outlined\"\n                style={{ width: \"100%\" }}\n                onChange={fillTextbox(setLastName)}\n                value={lastName}\n                error={lastName === \"\" && invalidStep}\n              />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <InputLabel htmlFor=\"dob\" className={classes.label}>\n                Date of Birth\n              </InputLabel>\n              <BootstrapInput\n                id=\"dob\"\n                type=\"date\"\n                style={{ width: \"100%\" }}\n                onChange={fillTextbox(setDob)}\n                value={dob}\n                error={dob === \"\" && invalidStep}\n              />\n            </Grid>\n            <Grid item xs={12} md={12}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ width: \"100%\", height: \"60px\", textTransform: \"none\" }}\n                disableElevation={true}\n                onClick={submitGetCard}\n              >\n                Get an Email with your Card\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={12} className={classes.footer}>\n              Already logged in once before?\n              <a\n                href=\"https://www.getperkify.com/view-my-card\"\n                className=\"sign-in\"\n              >\n                &nbsp;Sign In\n              </a>\n            </Grid>\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default GetCard;\n"]},"metadata":{},"sourceType":"module"}