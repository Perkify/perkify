{"ast":null,"code":"var _jsxFileName = \"/Users/jerryye/perkify/src/views/dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport VerticalNav from \"components/VerticalNav\";\nimport React from \"react\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport CreateGroup from \"views/createGroup\";\nimport ManagePeople from \"views/employees\";\nimport ManageGroups from \"views/manageGroups\";\nimport GeneralDashboard from \"./GeneralDashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const {\n    path,\n    url\n  } = useRouteMatch();\n  return /*#__PURE__*/_jsxDEV(VerticalNav, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: path,\n        component: GeneralDashboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${path}/people`,\n        component: ManagePeople\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${path}/group/:id`,\n        component: ManageGroups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${path}/create/group`,\n        component: CreateGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"2M8WoJJJ9KDFxUKWoT+QS4uMOYI=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/jerryye/perkify/src/views/dashboard/index.tsx"],"names":["VerticalNav","React","Route","Switch","useRouteMatch","CreateGroup","ManagePeople","ManageGroups","GeneralDashboard","Dashboard","path","url"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,wBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,aAAxB,QAA6C,kBAA7C;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAgBP,aAAa,EAAnC;AAEA,sBACE,QAAC,WAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAEM,IAAnB;AAAyB,QAAA,SAAS,EAAEF;AAApC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEE,IAAK,SAArB;AAA+B,QAAA,SAAS,EAAEJ;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEI,IAAK,YAArB;AAAkC,QAAA,SAAS,EAAEH;AAA7C;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEG,IAAK,eAArB;AAAqC,QAAA,SAAS,EAAEL;AAAhD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAbD;;GAAMI,S;UACkBL,a;;;KADlBK,S;AAeN,eAAeA,SAAf","sourcesContent":["import VerticalNav from \"components/VerticalNav\";\nimport React from \"react\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport CreateGroup from \"views/createGroup\";\nimport ManagePeople from \"views/employees\";\nimport ManageGroups from \"views/manageGroups\";\nimport GeneralDashboard from \"./GeneralDashboard\";\n\nconst Dashboard = () => {\n  const { path, url } = useRouteMatch();\n\n  return (\n    <VerticalNav>\n      <Switch>\n        <Route exact path={path} component={GeneralDashboard} />\n        <Route path={`${path}/people`} component={ManagePeople} />\n        <Route path={`${path}/group/:id`} component={ManageGroups} />\n        <Route path={`${path}/create/group`} component={CreateGroup} />\n      </Switch>\n    </VerticalNav>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}